// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_application_1/test/events_page_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_application_1/data/models/event.dart' as _i2;
import 'package:flutter_application_1/data/models/user.dart' as _i3;
import 'package:flutter_application_1/data/repositories/event_repository.dart'
    as _i4;
import 'package:flutter_application_1/data/repositories/user_repository.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEvent_0 extends _i1.SmartFake implements _i2.Event {
  _FakeEvent_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [EventRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsPageEventRepository extends _i1.Mock
    implements _i4.EventRepository {
  MockEventsPageEventRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.Event>> fetchAllEvents() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllEvents, []),
            returnValue: _i5.Future<List<_i2.Event>>.value(<_i2.Event>[]),
          )
          as _i5.Future<List<_i2.Event>>);

  @override
  _i5.Future<void> deleteEvent(int? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteEvent, [eventId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.Event> createEvent({
    required String? name,
    required String? description,
    required String? location,
    required DateTime? dateTime,
    required int? maxAttendees,
    required int? cost,
    required String? paymentInfo,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createEvent, [], {
              #name: name,
              #description: description,
              #location: location,
              #dateTime: dateTime,
              #maxAttendees: maxAttendees,
              #cost: cost,
              #paymentInfo: paymentInfo,
            }),
            returnValue: _i5.Future<_i2.Event>.value(
              _FakeEvent_0(
                this,
                Invocation.method(#createEvent, [], {
                  #name: name,
                  #description: description,
                  #location: location,
                  #dateTime: dateTime,
                  #maxAttendees: maxAttendees,
                  #cost: cost,
                  #paymentInfo: paymentInfo,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.Event>);

  @override
  _i5.Future<_i2.Event> fetchEventById(int? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchEventById, [eventId]),
            returnValue: _i5.Future<_i2.Event>.value(
              _FakeEvent_0(this, Invocation.method(#fetchEventById, [eventId])),
            ),
          )
          as _i5.Future<_i2.Event>);

  @override
  _i5.Future<List<String>> getFriendsAttending(int? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#getFriendsAttending, [eventId]),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsPageUserRepository extends _i1.Mock
    implements _i6.UserRepository {
  MockEventsPageUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.User> createUser({
    required String? id,
    required String? name,
    required String? email,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [], {
              #id: id,
              #name: name,
              #email: email,
            }),
            returnValue: _i5.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#createUser, [], {
                  #id: id,
                  #name: name,
                  #email: email,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.User>);

  @override
  _i5.Future<List<_i2.Event>> fetchOwnedEvents() =>
      (super.noSuchMethod(
            Invocation.method(#fetchOwnedEvents, []),
            returnValue: _i5.Future<List<_i2.Event>>.value(<_i2.Event>[]),
          )
          as _i5.Future<List<_i2.Event>>);

  @override
  _i5.Future<List<_i2.Event>> fetchParticipatingEvents() =>
      (super.noSuchMethod(
            Invocation.method(#fetchParticipatingEvents, []),
            returnValue: _i5.Future<List<_i2.Event>>.value(<_i2.Event>[]),
          )
          as _i5.Future<List<_i2.Event>>);

  @override
  _i5.Future<_i3.User> addParticipation(int? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#addParticipation, [eventId]),
            returnValue: _i5.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#addParticipation, [eventId]),
              ),
            ),
          )
          as _i5.Future<_i3.User>);

  @override
  _i5.Future<_i3.User> unregisterFromEvent(int? eventId) =>
      (super.noSuchMethod(
            Invocation.method(#unregisterFromEvent, [eventId]),
            returnValue: _i5.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#unregisterFromEvent, [eventId]),
              ),
            ),
          )
          as _i5.Future<_i3.User>);

  @override
  _i5.Future<List<_i3.User>> searchUsers(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchUsers, [query]),
            returnValue: _i5.Future<List<_i3.User>>.value(<_i3.User>[]),
          )
          as _i5.Future<List<_i3.User>>);

  @override
  _i5.Future<List<_i3.User>> fetchFriends() =>
      (super.noSuchMethod(
            Invocation.method(#fetchFriends, []),
            returnValue: _i5.Future<List<_i3.User>>.value(<_i3.User>[]),
          )
          as _i5.Future<List<_i3.User>>);

  @override
  _i5.Future<List<_i3.User>> fetchPending() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPending, []),
            returnValue: _i5.Future<List<_i3.User>>.value(<_i3.User>[]),
          )
          as _i5.Future<List<_i3.User>>);

  @override
  _i5.Future<String> addFriend(String? personId) =>
      (super.noSuchMethod(
            Invocation.method(#addFriend, [personId]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#addFriend, [personId]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> removeFriend(String? personId) =>
      (super.noSuchMethod(
            Invocation.method(#removeFriend, [personId]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#removeFriend, [personId]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> acceptRequest(String? personId) =>
      (super.noSuchMethod(
            Invocation.method(#acceptRequest, [personId]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#acceptRequest, [personId]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> rejectRequest(String? personId) =>
      (super.noSuchMethod(
            Invocation.method(#rejectRequest, [personId]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#rejectRequest, [personId]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> toggleFavourite(String? personId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleFavourite, [personId]),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#toggleFavourite, [personId]),
              ),
            ),
          )
          as _i5.Future<String>);
}
